getwd()
setwd("~/Desktop/rnaseq_dealk/Data/RNA_seq/sequence_data/my_analysis/new_r_analysis_071322/normalized_data_analyses/GSEA_BROAD")
dat <- read.delim("final.txt", sep = "\t", fill = TRUE)
View(dat)
#Aggregated DF
aggregated_df <- aggregate(. ~ dat$go, data = dat,
FUN = function(x) paste(x))
View(aggregated_df)
df <- data.frame(V1 = c("XM_047165131", "XM_047167669", "XM_047165656"),
V2 = c("XM_047165132", "XM_047167670", "XM_047165657"),
V3 = c("XM_047165133", "XM_047167671", "XM_047165658"))
df
library(tidyverse)
extract_and_spread_xm <- function(vec) {
xm_values <- str_extract_all(vec, "(?<=XM_)[0-9]+") %>%
unlist()
xm_cols <- paste("XM_", xm_values, sep = "")
setNames(as.list(xm_values), xm_cols)
}
# Use the function to reformat the data frame
df_new <- df %>%
mutate(across(everything(), extract_and_spread_xm)) %>%
unnest(cols = everything(), keep_empty = TRUE)
# Print the resulting data frame
print(df_new)
# Use the function to reformat the data frame
df_new <- dat %>%
mutate(across(everything(), extract_and_spread_xm)) %>%
unnest(cols = everything(), keep_empty = TRUE)
# Use the function to reformat the data frame
dat_new <- dat %>%
mutate(across(everything(), extract_and_spread_xm)) %>%
unnest_wider(everything(), keep_empty = TRUE)
# Function to extract XM_ strings and spread them into new columns
extract_and_spread_xm <- function(vec) {
xm_values <- str_extract_all(vec, "(?<=XM_)[0-9]+") %>%
unlist()
xm_cols <- paste("XM_", xm_values, sep = "")
setNames(as.list(xm_values), xm_cols)
}
# Use the function to reformat the data frame
dat_new <- dat %>%
mutate(across(everything(), extract_and_spread_xm)) %>%
unnest_wider(everything(), keep_empty = TRUE)
?unnest_wider
# Use the function to reformat the data frame
dat_new <- dat %>%
mutate(across(everything(), extract_and_spread_xm)) %>%
unnest_wider(everything())
# Use the function to reformat the data frame
dat_new <- dat[,-1:3] %>%
mutate(across(everything(), extract_and_spread_xm)) %>%
unnest_wider(everything(), keep_empty = TRUE)
# Use the function to reformat the data frame
dat_new <- dat[,-1:3] %>%
mutate(across(everything(), extract_and_spread_xm)) %>%
unnest_wider(everything())
extract_and_spread_xm(dat$X)
# Use the function to reformat the data frame
dat_new <- dat[,-1:-3] %>%
mutate(across(everything(), extract_and_spread_xm)) %>%
unnest_wider(everything())
# Use the function to reformat the data frame
dat_new <- dat[-1,-1:-3] %>%
mutate(across(everything(), extract_and_spread_xm)) %>%
unnest_wider(everything())
# Use the function to reformat the data frame
dat_new <- dat[-1,-(1:3)] %>%
mutate(across(everything(), extract_and_spread_xm)) %>%
unnest_wider(everything())
# Function to extract XM_ strings and spread them into new columns
extract_and_spread_xm <- function(vec) {
xm_values <- str_extract_all(vec, "(?<=XM_)[0-9]+") %>%
unlist()
xm_cols <- make.unique(paste("XM_", xm_values, sep = ""))
setNames(as.list(xm_values), xm_cols)
}
# Use the function to reformat the data frame
dat_new <- dat %>%
mutate(across(everything(), extract_and_spread_xm)) %>%
unnest_longer(cols = starts_with("XM_"), names_to = "col_suffix") %>%
pivot_wider(names_from = col_suffix, values_from = value)
# Function to extract XM_ strings and spread them into new columns
extract_and_spread_xm <- function(vec) {
xm_values <- str_extract_all(vec, "(?<=XM_)[0-9]+") %>%
unlist()
xm_cols <- make.unique(paste("XM_", xm_values, sep = ""))
setNames(as.list(xm_values), xm_cols)
}
# Use the function to reformat the data frame
dat_new <- dat %>%
mutate(across(everything(), extract_and_spread_xm)) %>%
unnest_longer(cols = starts_with("XM_"), names_to = "col_suffix") %>%
pivot_wider(names_from = col_suffix, values_from = value)
?unnest_longer
unnest_longer
?unnest_longer
# Use the function to reformat the data frame
dat_new <- dat %>%
mutate(across(everything(), extract_and_spread_xm)) %>%
unnest_longer(col = starts_with("XM_"), names_repair = "col_suffix") %>%
pivot_wider(names_from = col_suffix, values_from = value)
# Use the function to reformat the data frame
dat_new <- dat[-1,] %>%
mutate(across(everything(), extract_and_spread_xm)) %>%
unnest_longer(col = starts_with("XM_"), names_repair = "col_suffix") %>%
pivot_wider(names_from = col_suffix, values_from = value)
# Use the function to reformat the data frame
dat_new <- dat[,-(1:3)] %>%
mutate(across(everything(), extract_and_spread_xm)) %>%
unnest_longer(col = starts_with("XM_"), names_repair = "col_suffix") %>%
pivot_wider(names_from = col_suffix, values_from = value)
?aggregate
colnames(dat)
?aggregate
getwd()
# Read the GMT file into a data frame
gmt_file <- "/Users/masonclark/Dropbox/Mac/Desktop/rnaseq_dealk/Data/RNA_seq/sequence_data/my_analysis/new_r_analysis_071322/normalized_data_analyses/GSEA_BROAD/Hzea_GOALL.gmt"
gmt_data <- read_delim(gmt_file, delim = "\t", col_names = FALSE)
# Function to aggregate genes in each gene set
aggregate_genes <- function(x) {
paste(unique(unlist(x)), collapse = "\t")
}
# Group by the first column (gene set) and aggregate genes
aggregated_data <- gmt_data %>%
group_by(X1) %>%
summarize(across(starts_with("X"), aggregate_genes)) %>%
ungroup()
)
aggregated_data
View(aggregated_data)
write.delim(aggregated_data, "Hzea_GOALL_FINAL_072723.gmt")
#Write to file
write.table(aggregated_data, "Hzea_GOALL_FINAL_072723.gmt")
#Write to file
write.table(aggregated_data[-1], "Hzea_GOALL_FINAL_072723.gmt")
colnames(aggregated_data)
head(aggregated_data[-1,])
View(aggregated_data)
#Write to file
write.table(aggregated_data[-1], "Hzea_GOALL_FINAL_072723.gmt")
View(head(aggregated_data[-1]))
View(head(aggregated_data[,-1]))
View(head(aggregated_data[-1,])
)
?write.table
#Write to file
write.table(aggregated_data, "Hzea_GOALL_FINAL_072723.gmt", col.names = FALSE)
save.image("~/Dropbox/Mac/Desktop/rnaseq_dealk/Data/RNA_seq/sequence_data/my_analysis/new_r_analysis_071322/normalized_data_analyses/GSEA_BROAD/Hzea_gmt_file_cleanup.RData")
