df <- enrGO(Sit8h_VS_Chl8h_midgut_parsed, Sit8h_VS_Chl8h_carcass_parsed)
#GO functions
enrGO <- function(midgutlist, carcasslist) {
enresults <- list()
midgut_genes_up <- midgutlist[[3]]
midgut_genes_down <- midgutlist[[4]]
carcass_genes_up <- carcasslist[[3]]
carcass_genes_down <- carcasslist[[4]]
enrich_and_append <- function(genes, tissue, regulation) {
enGO <- enrichGO(gene = genes,
universe = universe,
OrgDb = org.Hzea.eg.db,
keyType = "REFSEQ",
readable = F,
ont = "ALL",
pvalueCutoff = 0.05,
qvalueCutoff = 0.05)
if (!is.null(enGO) && nrow(enGO) > 1) {
res <- as.data.frame(enGO)
res$tissue.type <- rep(tissue)
res$regulation <- rep(regulation)
enresults <<- append(enresults, as.data.frame(res))
message(paste("enriched GO terms for", regulation, "genes in", tissue, "found"))
} else {
message(paste("No GO enrichments found for", regulation, "genes in", tissue))
}
}
enrich_and_append(midgut_genes_up, "midgut", "upregulated")
enrich_and_append(midgut_genes_down, "midgut", "downregulated")
enrich_and_append(carcass_genes_up, "carcass", "upregulated")
enrich_and_append(carcass_genes_down, "carcass", "downregulated")
combined_df <- do.call(cbind, enresults)
return(combined_df)
}
df <- enrGO(Sit8h_VS_Chl8h_midgut_parsed, Sit8h_VS_Chl8h_carcass_parsed)
df
View(df)
#GO functions
enrGO <- function(midgutlist, carcasslist) {
enresults <- list()
midgut_genes_up <- midgutlist[[3]]
midgut_genes_down <- midgutlist[[4]]
carcass_genes_up <- carcasslist[[3]]
carcass_genes_down <- carcasslist[[4]]
enrich_and_append <- function(genes, tissue, regulation) {
enGO <- enrichGO(gene = genes,
universe = universe,
OrgDb = org.Hzea.eg.db,
keyType = "REFSEQ",
readable = F,
ont = "ALL",
pvalueCutoff = 0.05,
qvalueCutoff = 0.05)
if (!is.null(enGO) && nrow(enGO) > 1) {
res <- as.data.frame(enGO)
res$tissue.type <- rep(tissue)
res$regulation <- rep(regulation)
enresults <<- append(enresults, as.data.frame(res))
message(paste("enriched GO terms for", regulation, "genes in", tissue, "found"))
} else {
message(paste("No GO enrichments found for", regulation, "genes in", tissue))
}
}
enrich_and_append(midgut_genes_up, "midgut", "upregulated")
enrich_and_append(midgut_genes_down, "midgut", "downregulated")
enrich_and_append(carcass_genes_up, "carcass", "upregulated")
enrich_and_append(carcass_genes_down, "carcass", "downregulated")
combined_df <- bind_rows(enresults, .id = "column_label").
#GO functions
enrGO <- function(midgutlist, carcasslist) {
enresults <- list()
midgut_genes_up <- midgutlist[[3]]
midgut_genes_down <- midgutlist[[4]]
carcass_genes_up <- carcasslist[[3]]
carcass_genes_down <- carcasslist[[4]]
enrich_and_append <- function(genes, tissue, regulation) {
enGO <- enrichGO(gene = genes,
universe = universe,
OrgDb = org.Hzea.eg.db,
keyType = "REFSEQ",
readable = F,
ont = "ALL",
pvalueCutoff = 0.05,
qvalueCutoff = 0.05)
if (!is.null(enGO) && nrow(enGO) > 1) {
res <- as.data.frame(enGO)
res$tissue.type <- rep(tissue)
res$regulation <- rep(regulation)
enresults <<- append(enresults, as.data.frame(res))
message(paste("enriched GO terms for", regulation, "genes in", tissue, "found"))
} else {
message(paste("No GO enrichments found for", regulation, "genes in", tissue))
}
}
enrich_and_append(midgut_genes_up, "midgut", "upregulated")
enrich_and_append(midgut_genes_down, "midgut", "downregulated")
enrich_and_append(carcass_genes_up, "carcass", "upregulated")
enrich_and_append(carcass_genes_down, "carcass", "downregulated")
combined_df <- bind_rows(enresults, .id = "column_label").
#GO functions
enrGO <- function(midgutlist, carcasslist) {
enresults <- list()
midgut_genes_up <- midgutlist[[3]]
midgut_genes_down <- midgutlist[[4]]
carcass_genes_up <- carcasslist[[3]]
carcass_genes_down <- carcasslist[[4]]
enrich_and_append <- function(genes, tissue, regulation) {
enGO <- enrichGO(gene = genes,
universe = universe,
OrgDb = org.Hzea.eg.db,
keyType = "REFSEQ",
readable = F,
ont = "ALL",
pvalueCutoff = 0.05,
qvalueCutoff = 0.05)
if (!is.null(enGO) && nrow(enGO) > 1) {
res <- as.data.frame(enGO)
res$tissue.type <- rep(tissue)
res$regulation <- rep(regulation)
enresults <<- append(enresults, as.data.frame(res))
message(paste("enriched GO terms for", regulation, "genes in", tissue, "found"))
} else {
message(paste("No GO enrichments found for", regulation, "genes in", tissue))
}
}
enrich_and_append(midgut_genes_up, "midgut", "upregulated")
enrich_and_append(midgut_genes_down, "midgut", "downregulated")
enrich_and_append(carcass_genes_up, "carcass", "upregulated")
enrich_and_append(carcass_genes_down, "carcass", "downregulated")
combined_df <- bind_rows(enresults)
return(combined_df)
}
df <- enrGO(Sit8h_VS_Chl8h_midgut_parsed, Sit8h_VS_Chl8h_carcass_parsed)
#GO functions
enrGO <- function(midgutlist, carcasslist) {
enresults <- list()
midgut_genes_up <- midgutlist[[3]]
midgut_genes_down <- midgutlist[[4]]
carcass_genes_up <- carcasslist[[3]]
carcass_genes_down <- carcasslist[[4]]
enrich_and_append <- function(genes, tissue, regulation) {
enGO <- enrichGO(gene = genes,
universe = universe,
OrgDb = org.Hzea.eg.db,
keyType = "REFSEQ",
readable = F,
ont = "ALL",
pvalueCutoff = 0.05,
qvalueCutoff = 0.05)
if (!is.null(enGO) && nrow(enGO) > 1) {
res <- as.data.frame(enGO)
res$tissue.type <- rep(tissue)
res$regulation <- rep(regulation)
enresults <<- append(enresults, as.data.frame(res))
message(paste("enriched GO terms for", regulation, "genes in", tissue, "found"))
} else {
message(paste("No GO enrichments found for", regulation, "genes in", tissue))
}
}
enrich_and_append(midgut_genes_up, "midgut", "upregulated")
enrich_and_append(midgut_genes_down, "midgut", "downregulated")
enrich_and_append(carcass_genes_up, "carcass", "upregulated")
enrich_and_append(carcass_genes_down, "carcass", "downregulated")
combined_df <- bind_rows(enresults, .id = "column_label")
return(combined_df)
}
df <- enrGO(Sit8h_VS_Chl8h_midgut_parsed, Sit8h_VS_Chl8h_carcass_parsed)
#GO functions
enrGO <- function(midgutlist, carcasslist) {
enresults <- list()
midgut_genes_up <- midgutlist[[3]]
midgut_genes_down <- midgutlist[[4]]
carcass_genes_up <- carcasslist[[3]]
carcass_genes_down <- carcasslist[[4]]
enrich_and_append <- function(genes, tissue, regulation) {
enGO <- enrichGO(gene = genes,
universe = universe,
OrgDb = org.Hzea.eg.db,
keyType = "REFSEQ",
readable = F,
ont = "ALL",
pvalueCutoff = 0.05,
qvalueCutoff = 0.05)
if (!is.null(enGO) && nrow(enGO) > 1) {
res <- as.data.frame(enGO)
res$tissue.type <- rep(tissue)
res$regulation <- rep(regulation)
enresults <<- append(enresults, as.data.frame(res))
message(paste("enriched GO terms for", regulation, "genes in", tissue, "found"))
} else {
message(paste("No GO enrichments found for", regulation, "genes in", tissue))
}
}
enrich_and_append(midgut_genes_up, "midgut", "upregulated")
enrich_and_append(midgut_genes_down, "midgut", "downregulated")
enrich_and_append(carcass_genes_up, "carcass", "upregulated")
enrich_and_append(carcass_genes_down, "carcass", "downregulated")
combined_df <- do.call(rbind, enresults)
return(combined_df)
}
df <- enrGO(Sit8h_VS_Chl8h_midgut_parsed, Sit8h_VS_Chl8h_carcass_parsed)
View(df)
#GO functions
enrGO <- function(midgutlist, carcasslist) {
enresults <- list()
midgut_genes_up <- midgutlist[[3]]
midgut_genes_down <- midgutlist[[4]]
carcass_genes_up <- carcasslist[[3]]
carcass_genes_down <- carcasslist[[4]]
enrich_and_append <- function(genes, tissue, regulation) {
enGO <- enrichGO(gene = genes,
universe = universe,
OrgDb = org.Hzea.eg.db,
keyType = "REFSEQ",
readable = F,
ont = "ALL",
pvalueCutoff = 0.05,
qvalueCutoff = 0.05)
if (!is.null(enGO) && nrow(enGO) > 1) {
res <- as.data.frame(enGO)
res$tissue.type <- rep(tissue)
res$regulation <- rep(regulation)
enresults <<- append(enresults, as.data.frame(res))
message(paste("enriched GO terms for", regulation, "genes in", tissue, "found"))
} else {
message(paste("No GO enrichments found for", regulation, "genes in", tissue))
}
}
enrich_and_append(midgut_genes_up, "midgut", "upregulated")
enrich_and_append(midgut_genes_down, "midgut", "downregulated")
enrich_and_append(carcass_genes_up, "carcass", "upregulated")
enrich_and_append(carcass_genes_down, "carcass", "downregulated")
combined_df <- rbindlist(enresults, use.names="check", fill=FALSE, idcol=NULL)
return(combined_df)
}
View(df)
df <- enrGO(Sit8h_VS_Chl8h_midgut_parsed, Sit8h_VS_Chl8h_carcass_parsed)
#GO functions
enrGO <- function(midgutlist, carcasslist) {
enresults <- list()
midgut_genes_up <- midgutlist[[3]]
midgut_genes_down <- midgutlist[[4]]
carcass_genes_up <- carcasslist[[3]]
carcass_genes_down <- carcasslist[[4]]
enrich_and_append <- function(genes, tissue, regulation) {
enGO <- enrichGO(gene = genes,
universe = universe,
OrgDb = org.Hzea.eg.db,
keyType = "REFSEQ",
readable = F,
ont = "ALL",
pvalueCutoff = 0.05,
qvalueCutoff = 0.05)
if (!is.null(enGO) && nrow(enGO) > 1) {
res <- as.data.frame(enGO)
res$tissue.type <- rep(tissue)
res$regulation <- rep(regulation)
enresults <<- append(enresults, as.data.frame(res))
message(paste("enriched GO terms for", regulation, "genes in", tissue, "found"))
} else {
message(paste("No GO enrichments found for", regulation, "genes in", tissue))
}
}
enrich_and_append(midgut_genes_up, "midgut", "upregulated")
enrich_and_append(midgut_genes_down, "midgut", "downregulated")
enrich_and_append(carcass_genes_up, "carcass", "upregulated")
enrich_and_append(carcass_genes_down, "carcass", "downregulated")
combined_df <- bind_rows(enresults)
return(combined_df)
}
df <- enrGO(Sit8h_VS_Chl8h_midgut_parsed, Sit8h_VS_Chl8h_carcass_parsed)
#GO functions
enrGO <- function(midgutlist, carcasslist) {
enresults <- list()
midgut_genes_up <- midgutlist[[3]]
midgut_genes_down <- midgutlist[[4]]
carcass_genes_up <- carcasslist[[3]]
carcass_genes_down <- carcasslist[[4]]
enrich_and_append <- function(genes, tissue, regulation) {
enGO <- enrichGO(gene = genes,
universe = universe,
OrgDb = org.Hzea.eg.db,
keyType = "REFSEQ",
readable = F,
ont = "ALL",
pvalueCutoff = 0.05,
qvalueCutoff = 0.05)
if (!is.null(enGO) && nrow(enGO) > 1) {
res <- as.data.frame(enGO)
res$tissue.type <- rep(tissue)
res$regulation <- rep(regulation)
enresults <<- append(enresults, as.data.frame(res))
message(paste("enriched GO terms for", regulation, "genes in", tissue, "found"))
} else {
message(paste("No GO enrichments found for", regulation, "genes in", tissue))
}
}
enrich_and_append(midgut_genes_up, "midgut", "upregulated")
enrich_and_append(midgut_genes_down, "midgut", "downregulated")
enrich_and_append(carcass_genes_up, "carcass", "upregulated")
enrich_and_append(carcass_genes_down, "carcass", "downregulated")
combined_df <- bind_rows(enresults, .id = "original_df")
return(combined_df)
}
df <- enrGO(Sit8h_VS_Chl8h_midgut_parsed, Sit8h_VS_Chl8h_carcass_parsed)
#GO functions
enrGO <- function(midgutlist, carcasslist) {
enresults <- list()
midgut_genes_up <- midgutlist[[3]]
midgut_genes_down <- midgutlist[[4]]
carcass_genes_up <- carcasslist[[3]]
carcass_genes_down <- carcasslist[[4]]
enrich_and_append <- function(genes, tissue, regulation) {
enGO <- enrichGO(gene = genes,
universe = universe,
OrgDb = org.Hzea.eg.db,
keyType = "REFSEQ",
readable = F,
ont = "ALL",
pvalueCutoff = 0.05,
qvalueCutoff = 0.05)
if (!is.null(enGO) && nrow(enGO) > 1) {
res <- as.data.frame(enGO)
colnames(res) <- make.unique(colnames(res))  # Make column names unique
res$tissue.type <- rep(tissue, nrow(res))
res$regulation <- rep(regulation, nrow(res))
enresults <<- append(enresults, as.data.frame(res))
message(paste("enriched GO terms for", regulation, "genes in", tissue, "found"))
} else {
message(paste("No GO enrichments found for", regulation, "genes in", tissue))
}
}
enrich_and_append(midgut_genes_up, "midgut", "upregulated")
enrich_and_append(midgut_genes_down, "midgut", "downregulated")
enrich_and_append(carcass_genes_up, "carcass", "upregulated")
enrich_and_append(carcass_genes_down, "carcass", "downregulated")
combined_df <- bind_rows(enresults, .id = "original_df")
return(combined_df)
}
df <- enrGO(Sit8h_VS_Chl8h_midgut_parsed, Sit8h_VS_Chl8h_carcass_parsed)
#GO functions
enrGO <- function(midgutlist, carcasslist) {
enresults <- list()
midgut_genes_up <- midgutlist[[3]]
midgut_genes_down <- midgutlist[[4]]
carcass_genes_up <- carcasslist[[3]]
carcass_genes_down <- carcasslist[[4]]
enrich_and_append <- function(genes, tissue, regulation) {
enGO <- enrichGO(gene = genes,
universe = universe,
OrgDb = org.Hzea.eg.db,
keyType = "REFSEQ",
readable = F,
ont = "ALL",
pvalueCutoff = 0.05,
qvalueCutoff = 0.05)
if (!is.null(enGO) && nrow(enGO) > 1) {
res <- as.data.frame(enGO)
tissue_col <- rep(tissue, nrow(res))
regulation_col <- rep(regulation, nrow(res))
enresults <<- append(enresults, cbind(tissue_col, regulation_col, res))
message(paste("enriched GO terms for", regulation, "genes in", tissue, "found"))
} else {
message(paste("No GO enrichments found for", regulation, "genes in", tissue))
}
}
enrich_and_append(midgut_genes_up, "midgut", "upregulated")
enrich_and_append(midgut_genes_down, "midgut", "downregulated")
enrich_and_append(carcass_genes_up, "carcass", "upregulated")
enrich_and_append(carcass_genes_down, "carcass", "downregulated")
combined_df <- bind_rows(enresults, .id = "original_df")
return(combined_df)
}
df <- enrGO(Sit8h_VS_Chl8h_midgut_parsed, Sit8h_VS_Chl8h_carcass_parsed)
#GO functions
enrGO <- function(midgutlist, carcasslist) {
enresults <- list()
midgut_genes_up <- midgutlist[[3]]
midgut_genes_down <- midgutlist[[4]]
carcass_genes_up <- carcasslist[[3]]
carcass_genes_down <- carcasslist[[4]]
enrich_and_append <- function(genes, tissue, regulation) {
enGO <- enrichGO(gene = genes,
universe = universe,
OrgDb = org.Hzea.eg.db,
keyType = "REFSEQ",
readable = F,
ont = "ALL",
pvalueCutoff = 0.05,
qvalueCutoff = 0.05)
if (!is.null(enGO) && nrow(enGO) > 1) {
res <- as.data.frame(enGO)
res <- res %>%
mutate(tissue.type = tissue, regulation = regulation) %>%
select(tissue.type, regulation, everything())  # Move the new columns to the front
enresults <<- append(enresults, res)
message(paste("enriched GO terms for", regulation, "genes in", tissue, "found"))
} else {
message(paste("No GO enrichments found for", regulation, "genes in", tissue))
}
}
enrich_and_append(midgut_genes_up, "midgut", "upregulated")
enrich_and_append(midgut_genes_down, "midgut", "downregulated")
enrich_and_append(carcass_genes_up, "carcass", "upregulated")
enrich_and_append(carcass_genes_down, "carcass", "downregulated")
combined_df <- bind_rows(enresults, .id = "original_df")
return(combined_df)
}
df <- enrGO(Sit8h_VS_Chl8h_midgut_parsed, Sit8h_VS_Chl8h_carcass_parsed)
#GO functions
enrGO <- function(midgutlist, carcasslist) {
enresults <- list()
midgut_genes_up <- midgutlist[[3]]
midgut_genes_down <- midgutlist[[4]]
carcass_genes_up <- carcasslist[[3]]
carcass_genes_down <- carcasslist[[4]]
enrich_and_append <- function(genes, tissue, regulation) {
enGO <- enrichGO(gene = genes,
universe = universe,
OrgDb = org.Hzea.eg.db,
keyType = "REFSEQ",
readable = F,
ont = "ALL",
pvalueCutoff = 0.05,
qvalueCutoff = 0.05)
if (!is.null(enGO) && nrow(enGO) > 1) {
res <- as.data.frame(enGO)
res$tissue.type <- rep(tissue)
res$regulation <- rep(regulation)
enresults <- append(enresults, as.data.frame(res))
message(paste("enriched GO terms for", regulation, "genes in", tissue, "found"))
} else {
message(paste("No GO enrichments found for", regulation, "genes in", tissue))
}
}
enrich_and_append(midgut_genes_up, "midgut", "upregulated")
enrich_and_append(midgut_genes_down, "midgut", "downregulated")
enrich_and_append(carcass_genes_up, "carcass", "upregulated")
enrich_and_append(carcass_genes_down, "carcass", "downregulated")
combined_df <- bind_rows(enresults)
return(combined_df)
}
df <- enrGO(Sit8h_VS_Chl8h_midgut_parsed, Sit8h_VS_Chl8h_carcass_parsed)
#GO functions
enrGO <- function(midgutlist, carcasslist) {
enresults <- list()
midgut_genes_up <- midgutlist[[3]]
midgut_genes_down <- midgutlist[[4]]
carcass_genes_up <- carcasslist[[3]]
carcass_genes_down <- carcasslist[[4]]
enrich_and_append <- function(genes, tissue, regulation) {
enGO <- enrichGO(gene = genes,
universe = universe,
OrgDb = org.Hzea.eg.db,
keyType = "REFSEQ",
readable = F,
ont = "ALL",
pvalueCutoff = 0.05,
qvalueCutoff = 0.05)
if (!is.null(enGO) && nrow(enGO) > 1) {
res <- as.data.frame(enGO)
res$tissue.type <- rep(tissue)
res$regulation <- rep(regulation)
enresults <<- append(enresults, as.data.frame(res))
message(paste("enriched GO terms for", regulation, "genes in", tissue, "found"))
} else {
message(paste("No GO enrichments found for", regulation, "genes in", tissue))
}
}
l1 <- enrich_and_append(midgut_genes_up, "midgut", "upregulated")
l2 <- enrich_and_append(midgut_genes_down, "midgut", "downregulated")
l3 <- enrich_and_append(carcass_genes_up, "carcass", "upregulated")
l4 <- enrich_and_append(carcass_genes_down, "carcass", "downregulated")
combined_list <- list(l1, l2, l3,l4)
return(combined_list)
}
df <- enrGO(Sit8h_VS_Chl8h_midgut_parsed, Sit8h_VS_Chl8h_carcass_parsed)
View(df)
#GO functions
enrGO <- function(midgutlist, carcasslist) {
enresults <- list()
midgut_genes_up <- midgutlist[[3]]
midgut_genes_down <- midgutlist[[4]]
carcass_genes_up <- carcasslist[[3]]
carcass_genes_down <- carcasslist[[4]]
enrich_and_append <- function(genes, tissue, regulation) {
enGO <- enrichGO(gene = genes,
universe = universe,
OrgDb = org.Hzea.eg.db,
keyType = "REFSEQ",
readable = F,
ont = "ALL",
pvalueCutoff = 0.05,
qvalueCutoff = 0.05)
if (!is.null(enGO) && nrow(enGO) > 1) {
res <- as.data.frame(enGO)
res$tissue.type <- rep(tissue)
res$regulation <- rep(regulation)
enresults <<- append(enresults, as.data.frame(res))
message(paste("enriched GO terms for", regulation, "genes in", tissue, "found"))
} else {
message(paste("No GO enrichments found for", regulation, "genes in", tissue))
}
}
enrich_and_append(midgut_genes_up, "midgut", "upregulated")
enrich_and_append(midgut_genes_down, "midgut", "downregulated")
enrich_and_append(carcass_genes_up, "carcass", "upregulated")
enrich_and_append(carcass_genes_down, "carcass", "downregulated")
return(enresults)
}
df <- enrGO(Sit8h_VS_Chl8h_midgut_parsed, Sit8h_VS_Chl8h_carcass_parsed)
save.image("~/Dropbox/Mac/Desktop/rnaseq_dealk/Data/RNA_seq/sequence_data/my_analysis/new_r_analysis_071322/clusterprof_aug2023.RData")
